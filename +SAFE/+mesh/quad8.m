function MESH = quad8(MESH)
% Convert a 4-nodes quad mesh to 8-nodes quad element mesh
    
% New mid-edge nodes
    Xq = reshape(MESH.X(MESH.Elems,:),[],4,2) ; % all quad node coordinates
    Xme = 0.5*(Xq + circshift(Xq,-1,2)) ; % all mid edge coordinates
    [Xme,~,ic] = uniquetol(reshape(Xme,[],2),1e-9,'byrows',true,'DataScale',1) ; % unique mid edge coordinates
    MESH.X = [MESH.X ; Xme] ; 
    
% New element indices
    MESH.Elems = [MESH.Elems reshape(ic,[],4) + max(MESH.Elems(:))] ; % added midedge nodes
    MESH.Elems = MESH.Elems(:,[1 5 2 6 3 7 4 8]) ; % sort nodes in trigonometric order
    
% Element interpolation 
    % shape functions, xi in [-1;1]x[-1;1]
        MESH.ShapeFcn = @(xi) [ ...
                           1/4*(1-xi(:,1)).*(1-xi(:,2)).*(-1-xi(:,1)-xi(:,2)) ...
                           1/2*(1-xi(:,1).^2).*(1-xi(:,2)) ...
                           1/4*(1+xi(:,1)).*(1-xi(:,2)).*(-1+xi(:,1)-xi(:,2)) ... 
                           1/2*(1+xi(:,1)).*(1-xi(:,2).^2) ...
                           1/4*(1+xi(:,1)).*(1+xi(:,2)).*(-1+xi(:,1)+xi(:,2)) ... 
                           1/2*(1-xi(:,1).^2).*(1+xi(:,2)) ...
                           1/4*(1-xi(:,1)).*(1+xi(:,2)).*(-1-xi(:,1)+xi(:,2)) ...
                           1/2*(1-xi(:,1)).*(1-xi(:,2).^2) ...
                         ] ;
    % shape function derivatives
        MESH.dShapeFcn_dxi = @(xi) {[ ...
                                 1/4*(1-xi(:,2)).*(2*xi(:,1)+xi(:,2)) ...
                                 (xi(:,2)-1).*xi(:,1) ...
                                 1/4*(1-xi(:,2)).*(2*xi(:,1)-xi(:,2)) ...
                                 1/2*(1-xi(:,2).^2) ...
                                 1/4*(1+xi(:,2)).*(2*xi(:,1)+xi(:,2)) ...
                                 -xi(:,1).*(1+xi(:,2)) ...
                                 1/4*(1+xi(:,2)).*(2*xi(:,1)-xi(:,2)) ...
                                 1/2*(xi(:,2).^2-1) ...
                              ];[ ...
                                 1/4*(1-xi(:,1)).*(xi(:,1)+2*xi(:,2)) ...
                                 1/2*(xi(:,1).^2-1) ...
                                 1/4*(1+xi(:,1)).*(2*xi(:,2)-xi(:,1)) ...
                                 -xi(:,2).*(1+xi(:,1)) ...
                                 1/4*(1+xi(:,1)).*(xi(:,1)+2.*xi(:,2)) ...
                                 1/2*(1-xi(:,1).^2) ...
                                 1/4*(1-xi(:,1)).*(2*xi(:,2)-xi(:,1)) ...
                                 xi(:,2).*(xi(:,1)-1) ...
                              ]} ;
        
end

